@using Blazor_Instrument_Cluster.Client.Code.UrlObjects
@using System.Text.Json
@inject HttpClient client

<div class="container m-2 mt-4">
    <div class="row m-1 mb-4">
        <button class="btn btn-dark" @onclick="toggleKeyboard">Toggle Keyboard</button>
    </div>
    
    @if (showKeyboards) {
        <div class="row">
            @foreach (var keyRow in keyList) {
                <div style="margin-bottom: -0.5em">
                    @foreach (var key in keyRow) {
                        <KeyboardKey key="@key" keyEvent="@keyEventHandler"></KeyboardKey>
                    }
                </div>
            }
        </div>
    }
</div>

@code {

    [Parameter]
    public EventCallback<string> keyEvent { get; set; }


    List<List<KeyProperties>> keyList = new();

    protected bool showKeyboards = false;


    protected override async Task OnInitializedAsync() {
        var file = await client.GetByteArrayAsync("Json/DefaultKeyboard.json");
        var json = JsonSerializer.Deserialize<KeyboardJson>(file);
        keyList = json.keyList;
    }

    private async void keyEventHandler(string s) {
        await keyEvent.InvokeAsync(s);
    }

    private void toggleKeyboard() {
        showKeyboards = !showKeyboards;
    }

}