@page "/video"
@layout NothingLayout
@using System.Net.WebSockets
@using System.Text
@using System.Threading
@using Instrument_Communicator_Library.Information_Classes
@implements IDisposable

<h3>State: @videoWebSocket.State</h3>
<img src="@imgsrc"/>

<p>@message</p>


@code {
    readonly CancellationTokenSource disposalTokenSource = new();
    readonly ClientWebSocket videoWebSocket = new();
    string message = "ok?";
    string name = "Radar1";
    private string imgsrc = "";

    protected override async Task OnInitializedAsync() {
        await videoWebSocket.ConnectAsync(new Uri("wss://localhost:5001/videoStream"), disposalTokenSource.Token);

    //byte[] encodingBuffer = Encoding.ASCII.GetBytes(name);
    //ArraySegment<byte> seg = new ArraySegment<byte>(encodingBuffer);
    //await videoWebSocket.SendAsync(seg,WebSocketMessageType.Text,true,disposalTokenSource.Token);

    //Start the video receive loop
        _ = ReceiveVideo();
    }

    async Task ReceiveVideo() {
        while (!disposalTokenSource.IsCancellationRequested) {
            var buffer = new ArraySegment<byte>(new byte[4096]);
            var received = await videoWebSocket.ReceiveAsync(buffer, disposalTokenSource.Token);
            Console.WriteLine(buffer);
            var frame = new VideoFrame(new byte[] {});
            frame = (VideoFrame) frame.getObject(buffer.ToArray());
            Console.WriteLine(frame.value.Length);
            message = frame.value.Length.ToString();


            var base64 = Convert.ToBase64String(frame.value);
            imgsrc = string.Format("data:image/jpg;base64,{0}", base64);


            StateHasChanged();
        }
    }


    public void Dispose() {
        disposalTokenSource.Cancel();
        _ = videoWebSocket.CloseAsync(WebSocketCloseStatus.NormalClosure, "Bye", CancellationToken.None);
    }

}